name: Run PHPUnit with Coverage and PR Comments

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Configuração do PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: xdebug

      # Instalação das dependências do Composer
      - name: Install dependencies
        run: |
          composer install

      # Executa os testes PHPUnit
      - name: Run PHPUnit tests with coverage
        run: |
          vendor/bin/phpunit --coverage-clover=coverage.xml --log-junit junit.xml

      # Instalação do xmllint
      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils

      # Verificar a cobertura do código
      - name: Check coverage
        id: coverage
        run: |
          COVERAGE=$(php -r "
              libxml_use_internal_errors(true);
              \$xml = simplexml_load_file('coverage.xml');
              if (\$xml === false) {
                  echo 'Erro ao carregar o arquivo coverage.xml';
                  exit(1);
              }
              // Calcula a cobertura como (coveredelements / elements) * 100
              \$coverage = (\$xml->project->metrics['coveredelements'] / \$xml->project->metrics['elements']) * 100;
              echo \$coverage;
          ")
          echo "coverage=$COVERAGE" >> $GITHUB_ENV
          
          # Verifica se a cobertura está abaixo de 60% e não impede a execução
          echo "Cobertura calculada: $COVERAGE%"

      # Extrair detalhes dos testes (número de testes passados, falhados, etc)
      - name: Extract PHPUnit test results
        id: test_results
        run: |
          PASSED=$(xmllint --xpath "string(//testsuites/testsuite/test[@status='passed'])" junit.xml)
          FAILED=$(xmllint --xpath "string(//testsuites/testsuite/test[@status='failed'])" junit.xml)
          SKIPPED=$(xmllint --xpath "string(//testsuites/testsuite/test[@status='skipped'])" junit.xml)
          TOTAL=$(xmllint --xpath "string(//testsuites/testsuite/@tests)" junit.xml)
          echo "passed=$PASSED" >> $GITHUB_ENV
          echo "failed=$FAILED" >> $GITHUB_ENV
          echo "skipped=$SKIPPED" >> $GITHUB_ENV
          echo "total=$TOTAL" >> $GITHUB_ENV

      # Adicionar comentário detalhado na PR (sempre, mesmo se a cobertura for abaixo de 60%)
      - name: Post detailed comment on PR
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          COMMENT_BODY="### PHPUnit Test Results 🚀\n\n- **Coverage:** ${{ env.coverage }}%\n- **Total Tests:** ${{ env.total }}\n- **Passed:** ${{ env.passed }}\n- **Failed:** ${{ env.failed }}\n- **Skipped:** ${{ env.skipped }}"

          echo "Posting detailed comment: $COMMENT_BODY"

          # Enviar o comentário para a PR usando a API do GitHub
          curl -X POST -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"$COMMENT_BODY\"}" \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
