name: PHPUnit with Coverage Report

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout do c√≥digo
      - name: Checkout code
        uses: actions/checkout@v3

      # Configura√ß√£o do PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: xdebug

      # Instala√ß√£o das depend√™ncias do Composer
      - name: Install dependencies
        run: |
          composer install

      # Executa os testes PHPUnit com cobertura
      - name: Run PHPUnit with coverage
        run: |
          vendor/bin/phpunit --coverage-clover=coverage.xml --log-junit junit.xml

      # Instala√ß√£o do jq para manipula√ß√£o de JSON
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      # Processar cobertura e criar o corpo do coment√°rio
      - name: Generate PR Comment Body
        id: coverage
        run: |
          # Extrair cobertura total
          TOTAL_COVERAGE=$(php -r "
              libxml_use_internal_errors(true);
              \$xml = simplexml_load_file('coverage.xml');
              if (\$xml === false) {
                  echo 'Erro ao carregar o arquivo coverage.xml';
                  exit(1);
              }
              \$coverage = (\$xml->project->metrics['coveredelements'] / \$xml->project->metrics['elements']) * 100;
              echo \$coverage;
          ")

          # Extrair detalhes do junit.xml
          TOTAL=$(xmllint --xpath "string(//testsuites/@tests)" junit.xml)
          FAILURES=$(xmllint --xpath "string(//testsuites/@failures)" junit.xml)
          SKIPPED=$(xmllint --xpath "string(//testsuites/@skipped)" junit.xml)

          # Criar o corpo do coment√°rio
          COMMENT_BODY=$(jq -n --arg coverage "$TOTAL_COVERAGE" --arg total "$TOTAL" --arg failures "$FAILURES" --arg skipped "$SKIPPED" \
          '{"body": "### PHPUnit Test Coverage Report üöÄ\n- **Total Coverage:** \($coverage)%\n- **Total Tests:** \($total)\n- **Failures:** \($failures)\n- **Skipped:** \($skipped)\n"}')

          echo "$COMMENT_BODY" > comment.json

      # Postar coment√°rio na PR
      - name: Post PR Comment
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d @comment.json \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
