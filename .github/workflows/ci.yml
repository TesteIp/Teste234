name: Teste e Marge Back

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]  
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    name: PHPUnit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: Configurar PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: xdebug

      - name: Instalar dependÃªncias do Composer
        run: composer install

      - name: Executar PHPUnit com cobertura
        id: run_tests
        run: |
          vendor/bin/phpunit --coverage-clover=coverage.xml --log-junit=junit.xml
        continue-on-error: false 

      - name: Post test results
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### PHPUnit Test Coverage Report ðŸš€

            - **Total Coverage:** ${{ env.COVERAGE }}%
            - **Total Tests:** ${{ env.total_tests }}
            - **Failures:** ${{ env.failures }}
            - **Skipped:** ${{ env.skipped }}
            - **Execution Time:** ${{ env.execution_time }} seconds

      - name: Validar falhas nos testes
        if: always()
        run: |
          if [ "${{ env.failures }}" -gt 0 ]; then
              echo " Testes falharam: ${{ env.failures }}"
              exit 1
          fi

  merge-back:
    name: Merge Back Hotfix para Dev
    needs: test
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'hotfix/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Criar Pull Request da main para dev
        id: create_pr
        run: |
          PR_URL=$(gh pr create \
            --base dev \
            --head master \
            --title "Merge back hotfix para dev" \
            --body "Sincronizando as correÃ§Ãµes da main para dev.")
          PR_NUMBER=$(echo $PR_URL | grep -oE '[0-9]+$')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Mesclar PR automaticamente (Squash)
        if: env.PR_NUMBER != ''
        run: |
          gh pr merge $PR_NUMBER --squash
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Notificar erro no Slack
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": " Erro ao mesclar PR #${{ env.PR_NUMBER }} \n*Link:* ${{ env.PR_URL }}"
          }' ${{ secrets.SLACK }}
